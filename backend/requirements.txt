content="# Backend Dependencies\n\nThis document outlines the Python dependencies required for the Real API Test E-commerce Platform backend, built with Django REST Framework.\n\n## Overview\n\nThe `requirements.txt` file contains all the Python packages and their specific versions needed to run the e-commerce platform backend. This ensures consistent environments across development, testing, and production deployments.\n\n## Core Dependencies\n\n### Web Framework\n- **Django**: High-level Python web framework for rapid development\n- **djangorestframework**: Powerful toolkit for building Web APIs in Django\n- **django-cors-headers**: Handles Cross-Origin Resource Sharing (CORS) for frontend integration\n\n### Database\n- **psycopg2-binary**: PostgreSQL adapter for Python (production database)\n- **django-extensions**: Additional management commands and utilities\n\n### Authentication & Security\n- **djangorestframework-simplejwt**: JSON Web Token authentication for Django REST Framework\n- **django-allauth**: Comprehensive authentication system with social login support\n- **cryptography**: Cryptographic recipes and primitives for secure operations\n\n### Payment Processing\n- **stripe**: Official Stripe Python library for payment processing\n- **django-stripe-payments**: Django integration for Stripe payments\n\n### Real-time Features\n- **channels**: Django extension for handling WebSockets and real-time features\n- **channels-redis**: Redis channel layer for Django Channels\n- **redis**: Python Redis client for caching and message queuing\n\n### File Handling & Storage\n- **Pillow**: Python Imaging Library for image processing\n- **django-storages**: Custom storage backends for Django\n- **boto3**: Amazon Web Services SDK (for S3 storage in production)\n\n### API Documentation\n- **drf-spectacular**: OpenAPI 3 schema generation for Django REST Framework\n- **drf-spectacular[sidecar]**: Additional UI components for API documentation\n\n### Development & Testing\n- **pytest**: Testing framework\n- **pytest-django**: Django plugin for pytest\n- **factory-boy**: Test fixtures replacement based on thoughtbot's factory_bot\n- **coverage**: Code coverage measurement\n- **django-debug-toolbar**: Debug toolbar for Django development\n\n### Utilities\n- **python-decouple**: Separate configuration from code\n- **celery**: Distributed task queue for background processing\n- **django-celery-beat**: Celery periodic task scheduler\n- **requests**: HTTP library for external API calls\n\n## Installation\n\n### Prerequisites\n- Python 3.8 or higher\n- pip package manager\n- Virtual environment (recommended)\n\n### Setup Instructions\n\n1. **Create and activate virtual environment:**\n   ```bash\n   python -m venv venv\n   source venv/bin/activate  # On Windows: venv\\Scripts\\activate\n   ```\n\n2. **Install dependencies:**\n   ```bash\n   cd backend\n   pip install -r requirements.txt\n   ```\n\n3. **Verify installation:**\n   ```bash\n   pip list\n   ```\n\n## Development vs Production\n\n### Development Dependencies\nThe requirements include development-specific packages such as:\n- `django-debug-toolbar` for debugging\n- `pytest` and testing utilities\n- Development server optimizations\n\n### Production Considerations\nFor production deployment, consider:\n- Using `gunicorn` or `uwsgi` as WSGI server\n- Configuring proper database settings\n- Setting up Redis for caching and Celery\n- Configuring cloud storage (S3) for media files\n\n## Version Management\n\n### Pinned Versions\nAll dependencies are pinned to specific versions to ensure:\n- Consistent behavior across environments\n- Reproducible builds\n- Security through controlled updates\n\n### Updating Dependencies\nTo update dependencies safely:\n\n1. **Check for outdated packages:**\n   ```bash\n   pip list --outdated\n   ```\n\n2. **Update specific package:**\n   ```bash\n   pip install package_name==new_version\n   ```\n\n3. **Update requirements.txt:**\n   ```bash\n   pip freeze > requirements.txt\n   ```\n\n## Troubleshooting\n\n### Common Installation Issues\n\n**PostgreSQL adapter issues:**\n```bash\n# On Ubuntu/Debian\nsudo apt-get install libpq-dev python3-dev\n\n# On macOS\nbrew install postgresql\n```\n\n**Pillow compilation errors:**\n```bash\n# On Ubuntu/Debian\nsudo apt-get install libjpeg-dev zlib1g-dev\n\n# On macOS\nbrew install libjpeg zlib\n```\n\n**Redis connection issues:**\n- Ensure Redis server is running\n- Check Redis configuration in Django settings\n- Verify network" additional_kwargs={} response_metadata={'id': 'msg_011Lu7Ai89WAadvhp6iXW6pB', 'model': 'claude-sonnet-4-20250514', 'stop_reason': 'max_tokens', 'stop_sequence': None, 'usage': {'cache_creation_input_tokens': 0, 'cache_read_input_tokens': 0, 'input_tokens': 365, 'output_tokens': 1024, 'service_tier': 'standard'}} id='run--92dabddd-d9e5-4e19-9865-f4c421dbcc34-0' usage_metadata={'input_tokens': 365, 'output_tokens': 1024, 'total_tokens': 1389, 'input_token_details': {'cache_read': 0, 'cache_creation': 0}}