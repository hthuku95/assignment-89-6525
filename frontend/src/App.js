content='import React, { useState, useEffect } from \'react\';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \'react-router-dom\';\nimport { Elements } from \'@stripe/react-stripe-js\';\nimport { loadStripe } from \'@stripe/stripe-js\';\nimport { ToastContainer } from \'react-toastify\';\nimport \'react-toastify/dist/ReactToastify.css\';\n\nimport Header from \'./components/Layout/Header\';\nimport Footer from \'./components/Layout/Footer\';\nimport Home from \'./pages/Home\';\nimport Products from \'./pages/Products\';\nimport ProductDetail from \'./pages/ProductDetail\';\nimport Cart from \'./pages/Cart\';\nimport Checkout from \'./pages/Checkout\';\nimport Login from \'./pages/Auth/Login\';\nimport Register from \'./pages/Auth/Register\';\nimport Profile from \'./pages/Profile\';\nimport Orders from \'./pages/Orders\';\nimport OrderDetail from \'./pages/OrderDetail\';\nimport NotFound from \'./pages/NotFound\';\n\nimport { AuthProvider, useAuth } from \'./contexts/AuthContext\';\nimport { CartProvider } from \'./contexts/CartContext\';\nimport { NotificationProvider } from \'./contexts/NotificationContext\';\nimport ProtectedRoute from \'./components/Auth/ProtectedRoute\';\nimport LoadingSpinner from \'./components/UI/LoadingSpinner\';\nimport ErrorBoundary from \'./components/ErrorBoundary\';\n\nimport \'./App.css\';\n\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY);\n\nconst AppContent = () => {\n  const { user, loading } = useAuth();\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  useEffect(() => {\n    const initializeApp = async () => {\n      try {\n        await new Promise(resolve => setTimeout(resolve, 100));\n        setIsInitialized(true);\n      } catch (error) {\n        console.error(\'App initialization error:\', error);\n        setIsInitialized(true);\n      }\n    };\n\n    if (!loading) {\n      initializeApp();\n    }\n  }, [loading]);\n\n  if (loading || !isInitialized) {\n    return (\n      <div className="app-loading">\n        <LoadingSpinner size="large" />\n      </div>\n    );\n  }\n\n  return (\n    <div className="App">\n      <Router>\n        <Header />\n        <main className="main-content">\n          <Routes>\n            <Route path="/" element={<Home />} />\n            <Route path="/products" element={<Products />} />\n            <Route path="/products/:id" element={<ProductDetail />} />\n            <Route path="/cart" element={<Cart />} />\n            \n            <Route \n              path="/checkout" \n              element={\n                <ProtectedRoute>\n                  <Elements stripe={stripePromise}>\n                    <Checkout />\n                  </Elements>\n                </ProtectedRoute>\n              } \n            />\n            \n            <Route \n              path="/login" \n              element={user ? <Navigate to="/" replace /> : <Login />} \n            />\n            <Route \n              path="/register" \n              element={user ? <Navigate to="/" replace /> : <Register />} \n            />\n            \n            <Route \n              path="/profile" \n              element={\n                <ProtectedRoute>\n                  <Profile />\n                </ProtectedRoute>\n              } \n            />\n            <Route \n              path="/orders" \n              element={\n                <ProtectedRoute>\n                  <Orders />\n                </ProtectedRoute>\n              } \n            />\n            <Route \n              path="/orders/:id" \n              element={\n                <ProtectedRoute>\n                  <OrderDetail />\n                </ProtectedRoute>\n              } \n            />\n            \n            <Route path="*" element={<NotFound />} />\n          </Routes>\n        </main>\n        <Footer />\n        \n        <ToastContainer\n          position="top-right"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          paus' additional_kwargs={} response_metadata={'id': 'msg_01T91KKHePgpUcGUKVMhT9Mg', 'model': 'claude-sonnet-4-20250514', 'stop_reason': 'max_tokens', 'stop_sequence': None, 'usage': {'cache_creation_input_tokens': 0, 'cache_read_input_tokens': 0, 'input_tokens': 374, 'output_tokens': 1024, 'service_tier': 'standard'}} id='run--a0c0b59c-df57-4438-96e3-e683475b965d-0' usage_metadata={'input_tokens': 374, 'output_tokens': 1024, 'total_tokens': 1398, 'input_token_details': {'cache_read': 0, 'cache_creation': 0}}